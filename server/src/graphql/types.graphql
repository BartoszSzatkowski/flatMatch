type Query {
  getUser(email: String!): User
  getNextMatch(UserId: Int!): Match
}

type Mutation {
  createUser(user: InputUser!): User!
  addLocation(location: InputLocation!): Boolean!
  updateLocation(UserId: Int!, updateLocation: InputUpdateLocation!): Boolean!
  addDescription(desc: InputDesc!): Boolean!
  updateDescription(UserId: Int!, updateDesc: InputUpdateDesc): Boolean!
}

type User {
  id: Int!
  name: String!
  email: String!
}

type Match {
  userA: Int!
  userB: Int!
  status: Int!
}

input InputUser {
  name: String!
  email: String!
  password: String!
}

input InputLocation {
  UserId: Int!
  coords: String!
  radius: Int!
}

input InputUpdateLocation {
  UserId: Int
  coords: String
  radius: Int
}

input InputDesc {
  UserId: Int!
  text: String!
  factors: String!
}

input InputUpdateDesc {
  UserId: Int
  text: String
  factors: String
}
